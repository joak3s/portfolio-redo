import fs from 'fs';
import path from 'path';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';

// Load environment variables from .env.local
dotenv.config({ path: '.env.local' });

// Get the directory name
const __dirname = path.dirname(fileURLToPath(import.meta.url));
const rootDir = path.join(__dirname, '..');

// Get the service role key from environment
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;

if (!serviceRoleKey) {
  console.error('Error: SUPABASE_SERVICE_ROLE_KEY not found in environment variables');
  process.exit(1);
}

if (!supabaseUrl) {
  console.error('Error: NEXT_PUBLIC_SUPABASE_URL not found in environment variables');
  process.exit(1);
}

// Extract the project reference from the Supabase URL
const projectRef = supabaseUrl.match(/https:\/\/([^.]+)\.supabase\.co/)[1];

// Create the content for the .env file
const envContent = `# This file was generated by scripts/setup-env.js
# DO NOT COMMIT THIS FILE TO VERSION CONTROL

# Connection URL for Prisma with connection pooling (for querying)
DATABASE_URL="postgresql://postgres.${projectRef}:${serviceRoleKey}@aws-0-us-west-1.pooler.supabase.com:6543/postgres?pgbouncer=true"

# Direct connection to the database (for migrations)
DIRECT_URL="postgresql://postgres.${projectRef}:${serviceRoleKey}@aws-0-us-west-1.pooler.supabase.com:5432/postgres"
`;

// Write the .env file
fs.writeFileSync(path.join(rootDir, '.env'), envContent);

console.log('‚úÖ Environment variables set up successfully for Prisma');
console.log('üîë Connection credentials configured for development only');
console.log('‚ö†Ô∏è  Make sure to add .env to your .gitignore file');

// Check if .gitignore exists and contains .env
const gitignorePath = path.join(rootDir, '.gitignore');
if (fs.existsSync(gitignorePath)) {
  const gitignoreContent = fs.readFileSync(gitignorePath, 'utf8');
  if (!gitignoreContent.includes('.env')) {
    fs.appendFileSync(gitignorePath, '\n# Prisma environment files\n.env\n');
    console.log('‚úÖ Added .env to .gitignore file');
  } else {
    console.log('‚úÖ .env is already in .gitignore file');
  }
} else {
  fs.writeFileSync(gitignorePath, '# Prisma environment files\n.env\n');
  console.log('‚úÖ Created .gitignore file with .env entry');
} 